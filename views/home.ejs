<!DOCTYPE html>
<html lang="en">

<head>
  <!-- Required meta tags -->
  <meta charset="utf-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <script src="https://cdn.emailjs.com/dist/email.min.js"></script>

  <!-- Bootstrap CSS -->
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.1.3/dist/css/bootstrap.min.css" rel="stylesheet"
    integrity="sha384-1BmE4kWBq78iYhFldvKuhfTAU6auU8tT94WrHftjDbrCEXSU1oBoqyl2QvZ6jIW3" crossorigin="anonymous">

  <title>Accenture AI-Powered Photo Booth</title>

  <style>
    /* General Styles */
    body {
      font-family: 'Arial', sans-serif;
      background-color: #f2f2f2;
      margin: 0;
      padding: 0;
    }

    body>.py-5 {
      max-width: unset;
      padding: 0 !important;
    }

    .container {
      padding: 20px;
    }

    /* Header Styles */
    header {
      background-color: #fff;
      color: #000;
      padding: 20px 15px;
      display: flex;
      justify-content: space-between;
      align-items: center;
    }

    #logo {
      max-width: 150px;
    }

    h1 {
      font-size: 36px;
      margin: 0;
    }

    /* Main Content Styles */
    #content {
      background: linear-gradient(90deg, rgba(2, 0, 36, 1) 0%, #b455aa 36%, rgba(0, 212, 255, 1) 100%);
      border-radius: 10px;
      padding: 30px 80px;
      margin: 20px 0px;
      box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
    }

    .section {
      margin: 30px 0px;
    }

    #about {
      display: flex;
    }

    .image-booth {
      max-width: 500px;
      max-height: 500px;
    }

    .about-us {
      display: flex;
      flex-direction: column;
      align-items: center;
      justify-content: center;
    }

    h2 {
      font-size: 28px;
      color: #fff;
      margin: 20px 0;
    }

    p {
      font-size: 18px;
      color: #ccc;
      line-height: 1.5;
    }

    /* Style for the camera container */
    .camera-container {
      display: inline-grid;
      width: fit-content;
      background-color: #f2f2f2;
      /* Background color */
      border: 1px solid #ccc;
      /* Border */
      border-radius: 10px;
      /* Border radius */
      box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
      /* Box shadow */
      padding: 20px 40px;
      /* Add some padding for spacing */
    }

    .video-hide {
      display: none;
    }

    /* Button Styles */
    .btn {
      background-color: #004b8d;
      color: #fff;
      padding: 12px 24px;
      border: none;
      cursor: pointer;
      transition: background-color 0.3s;
      margin: 20px 0px;
      width: fit-content;
    }

    /* Updated button styles for better contrast */
    .btn {
      background-color: #fff;
      /* White background */
      color: #004b8d;
      /* Dark blue font color */
      border: 2px solid #004b8d;
      /* Dark blue border */
    }

    .btn:hover {
      background-color: #004b8d;
      /* Dark blue background on hover */
      color: #fff;
      /* White font color on hover */
    }

    /* Additional Content Styles */
    .additional-info {
      margin-top: 60px;
    }

    .additional-info h2 {
      font-size: 28px;
      color: #fff;
      margin: 20px 0;
    }

    .additional-info p {
      font-size: 18px;
      color: #ccc;
      line-height: 1.5;
    }

    /* Footer Styles */
    footer {
      background-color: #be82ff;
      color: #fff;
      padding: 20px 0;
      text-align: center;
    }

    footer p {
      font-size: 16px;
      margin: 0;
      color: #fff;
    }

    /* Fixed Camera Stream and Captured Image Styling */
    #camera-feed {
      max-width: 700px;
      max-height: 700px;
    }

    #captured-image {
      max-width: 700px;
      max-height: 700px;
      display: none;
      margin-top: 20px;
      border-radius: 10px;
    }
    .video-icon{
      width: 375px;
      max-height: 375px;
      padding: 40px;
      background-color: #e6dcff;
    }

    /* Improved List Styling */
    ul {
      list-style-type: disc;
      padding-left: 20px;
    }

    li {
      list-style-type: none;
      color: #ccc;
    }

    /* Style for the user details modal */
    #userDetailsModal {
      display: none;
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      background-color: rgba(0, 0, 0, 0.4);
      z-index: 1;
    }

    .modal-content {
      background-color: #fff;
      margin: 15% auto;
      padding: 20px;
      width: 70%;
      border-radius: 10px;
      position: relative;
    }

    .close {
      position: absolute;
      top: 10px;
      right: 10px;
      font-size: 24px;
      cursor: pointer;
    }

    /* Style for form elements within the modal */
    form {
      display: flex;
      flex-direction: column;
      align-items: center;
    }

    label {
      font-size: 16px;
      margin: 10px 0;
    }

    input[type="text"],
    input[type="email"],
    input[type="tel"] {
      width: 100%;
      padding: 10px;
      margin: 5px 0;
      border: 1px solid #ccc;
      border-radius: 5px;
    }

    button[type="submit"] {
      background-color: #004b8d;
      color: #fff;
      padding: 12px 24px;
      border: none;
      cursor: pointer;
      transition: background-color 0.3s;
      margin: 20px 0;
      border-radius: 5px;
    }

    button[type="submit"]:hover {
      background-color: #00396d;
    }
  </style>
</head>

<body>
  <section class="py-5 text-center container">

    <!-- Header Component -->
    <header>
      <img id="logo" src="https://upload.wikimedia.org/wikipedia/commons/1/1c/Accenture_logo.svg"
        alt="Accenture Logo" />
      <h1>AI-Powered Photo Booth</h1>
    </header>

    <!-- Photo Booth Content -->
    <div id="content">
      <section class="section" id="about">
        <img class="image-booth"
          src="https://ai-photo-booths-website.sfo2.cdn.digitaloceanspaces.com/website-assets/images/AI%20Photo%20Booths%20Logo.png" />
        <div class="about-us">
          <h2>About the Photo Booth</h2>
          <p>Welcome to our AI-powered photo booth, where you can capture and share unforgettable moments. Our
            state-of-the-art photo booth offers a fun and interactive experience for all your special events and
            occasions. Whether it's a wedding, a birthday party, or a corporate gathering, our photo booth is there to
            add a touch of joy to your moments.</p>
        </div>
      </section>

      <section class="section" id="why-choose-us">
        <h2>Instructions for using Booth!</h2>
        <ul>
          <li>High-quality photos with advanced AI technology</li>
          <li>Instant prints for you and your guests</li>
          <li>Customized photo frame options</li>
          <li>Seamless sharing on social media</li>
        </ul>
      </section>


      <!-- Capture Image -->
      <div class="camera-container section">
        <button class="btn" id="start-camera">Start Camera</button>
        <img class="video-icon" id="video-icon" src="https://pic.onlinewebfonts.com/thumbnails/icons_525792.svg" />
        <video id="camera-feed" class="video-hide" autoplay playsinline></video>
        <button class="btn" id="capture-image" disabled>Capture Image</button>
        <canvas id="image-canvas" style="display: none;"></canvas>
        <img id="captured-image">
        <button class="btn" id="share-email" disabled>Share by Email</button>
      </div>

      <div class="additional-info section">
        <h2>Explore More Features</h2>
        <p>Discover the power of AI in capturing your special moments. Our photo booth is equipped with the latest
          technology to deliver stunning results. From AI-powered filters to instant social media sharing, we've got you
          covered. Don't miss the opportunity to create lasting memories with us.</p>
      </div>
    </div>

    <!-- Add a modal for capturing user details -->
    <div id="userDetailsModal" class="modal">
      <div class="modal-content">
        <span class="close" id="closeUserDetailsModal">&times;</span>
        <form id="userDetailsForm">
          <label for="firstName">First Name:</label>
          <input type="text" id="firstName" required><br>

          <label for="lastName">Last Name:</label>
          <input type="text" id="lastName" required><br>

          <label for="email">Email Address:</label>
          <input type="email" id="userEmail" required><br>

          <label for="phone">Phone Number:</label>
          <input type="tel" id="userPhone" required><br>

          <button type="submit">Send Email</button>
        </form>
      </div>
    </div>



    <!-- Footer Component -->
    <footer>
      <p>&copy; 2023 AI-Powered Photo Booth. All rights reserved.</p>
    </footer>

  </section>
  <script>

    const startCameraButton = document.getElementById('start-camera');
    const captureImageButton = document.getElementById('capture-image');
    const cameraFeed = document.getElementById('camera-feed');
    const imageCanvas = document.getElementById('image-canvas');
    const capturedImage = document.getElementById('captured-image');
    const shareEmail = document.getElementById('share-email');
    const videoIcon = document.getElementById("video-icon");

    startCameraButton.addEventListener('click', () => {
      // Request camera access
      if (navigator.mediaDevices && navigator.mediaDevices.getUserMedia) {
        navigator.mediaDevices.getUserMedia({ video: true })
          .then(function (stream) {
            videoIcon.classList.add("video-hide");
            cameraFeed.classList.remove("video-hide");
            cameraFeed.srcObject = stream;
            captureImageButton.removeAttribute('disabled');
          })
          .catch(function (error) {
            // Handle errors, e.g., permission denied or no camera available
            console.error('Error accessing the camera:', error);
          });
      }
    });

    let imageBlob;
    captureImageButton.addEventListener('click', () => {
      // Capture a frame from the camera feed
      const context = imageCanvas.getContext('2d');
      imageCanvas.width = cameraFeed.videoWidth;
      imageCanvas.height = cameraFeed.videoHeight;
      context.drawImage(cameraFeed, 0, 0, imageCanvas.width, imageCanvas.height);
      shareEmail.removeAttribute('disabled');

      // Convert the image to a Blob
      imageCanvas.toBlob((blob) => {
        if (blob) {
          imageBlob = blob;
          // Render the captured image in an <img> element
          const imageUrl = URL.createObjectURL(blob);
          const capturedImage = document.getElementById('captured-image');
          capturedImage.src = imageUrl;
          capturedImage.style.display = 'block';
        }
      }, 'image/jpeg');
    });


    // Initialize Email.js with your User ID
    emailjs.init("zgEeteDXTKPCAKP_o");
    shareEmail.addEventListener("click", function () {


      const userDetailsModal = document.getElementById('userDetailsModal');
      userDetailsModal.style.display = 'block';
      // Close the user details modal when the close button is clicked
      const closeUserDetailsModal = document.getElementById('closeUserDetailsModal');
      closeUserDetailsModal.addEventListener('click', () => {
        const userDetailsModal = document.getElementById('userDetailsModal');
        userDetailsModal.style.display = 'none';
      });

      // Handle the form submission for user details
      const userDetailsForm = document.getElementById('userDetailsForm');
      userDetailsForm.addEventListener('submit', function (event) {
        event.preventDefault(); // Prevent the form from submitting normally

        const firstName = document.getElementById('firstName').value;
        const lastName = document.getElementById('lastName').value;
        const userEmail = document.getElementById('userEmail').value;
        const userPhone = document.getElementById('userPhone').value;

        // Close the user details modal
        const userDetailsModal = document.getElementById('userDetailsModal');
        userDetailsModal.style.display = 'none';

        if (userEmail) {
          // Create a FormData object to send the image to the server
          const formData = new FormData();
          if (imageBlob) {
            formData.append('image', imageBlob);

            // Send the captured image data to the server for Cloudinary upload
            fetch('/upload-to-cloudinary', {
              method: 'POST',
              body: formData
            })
              .then(response => response.json())
              .then(data => {
                if (data.success) {
                  // Handle success, e.g., display a success message to the user
                  console.log('Image uploaded to Cloudinary:', data.imageUrl);
                  const emailData = {
                    to_email: userEmail, // User's email
                    to_name: firstName + " " + lastName,
                    from_name: "Fahad Shafiq", // Your name
                    message: "Here's the image you requested:",
                    image_url: data.imageUrl
                  };

                  // Send the email using the Email.js send method
                  emailjs.send("service_2js4bnf", "template_tywgeak", emailData)
                    .then(function (response) {
                      console.log("Email sent successfully:", response);
                      alert("Email sent successfully.");
                      location.reload();
                    })
                    .catch(function (error) {
                      console.error("Email sending failed:", error);
                      alert("Email sending failed. Please try again.");
                    });
                } else {
                  // Handle any errors, e.g., display an error message
                  console.error('Error uploading to Cloudinary:', data.error);
                }
              })
              .catch(error => {
                // Handle fetch request error
                console.error('Error sending image to server:', error);
              });
          }
        }
      });
    });
  </script>
</body>

</html>